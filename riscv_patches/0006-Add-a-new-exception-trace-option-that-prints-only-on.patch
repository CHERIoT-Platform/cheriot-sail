From 951cbc162ecdef31361e2dddf5bd84bd77ce9b44 Mon Sep 17 00:00:00 2001
From: Robert Norton <ronorton@microsoft.com>
Date: Wed, 18 Jan 2023 11:03:36 +0000
Subject: [PATCH 06/10] Add a new 'exception' trace option that prints only on
 interrupts and exceptions.

---
 c_emulator/riscv_config.h  | 1 +
 c_emulator/riscv_prelude.c | 5 +++++
 c_emulator/riscv_prelude.h | 2 ++
 c_emulator/riscv_sim.c     | 6 +++++-
 model/prelude.sail         | 2 ++
 model/riscv_step.sail      | 4 ++--
 6 files changed, 17 insertions(+), 3 deletions(-)

diff --git a/c_emulator/riscv_config.h b/c_emulator/riscv_config.h
index f8f3eb3..dcbb32d 100644
--- a/c_emulator/riscv_config.h
+++ b/c_emulator/riscv_config.h
@@ -5,3 +5,4 @@ extern bool config_print_instr;
 extern bool config_print_reg;
 extern bool config_print_mem_access;
 extern bool config_print_platform;
+extern bool config_print_exception;
diff --git a/c_emulator/riscv_prelude.c b/c_emulator/riscv_prelude.c
index 92f8415..ad5a831 100644
--- a/c_emulator/riscv_prelude.c
+++ b/c_emulator/riscv_prelude.c
@@ -50,3 +50,8 @@ bool get_config_print_platform(unit u)
 {
   return (config_print_platform) ? true : false;
 }
+
+bool get_config_print_exception(unit u)
+{
+  return (config_print_exception) ? true : false;
+}
\ No newline at end of file
diff --git a/c_emulator/riscv_prelude.h b/c_emulator/riscv_prelude.h
index 9ac33aa..84a4090 100644
--- a/c_emulator/riscv_prelude.h
+++ b/c_emulator/riscv_prelude.h
@@ -9,8 +9,10 @@ unit print_instr(sail_string s);
 unit print_reg(sail_string s);
 unit print_mem_access(sail_string s);
 unit print_platform(sail_string s);
+unit print_exception(sail_string s);
 
 bool get_config_print_instr(unit u);
 bool get_config_print_reg(unit u);
 bool get_config_print_mem(unit u);
 bool get_config_print_platform(unit u);
+bool get_config_print_exception(unit u);
\ No newline at end of file
diff --git a/c_emulator/riscv_sim.c b/c_emulator/riscv_sim.c
index 787714e..648c4c9 100644
--- a/c_emulator/riscv_sim.c
+++ b/c_emulator/riscv_sim.c
@@ -76,6 +76,7 @@ bool config_print_reg = true;
 bool config_print_mem_access = true;
 bool config_print_platform = true;
 bool config_print_rvfi = false;
+bool config_print_exception = true;
 int config_use_boot_rom = 
 #ifdef NO_BOOT_ROM
 false
@@ -91,6 +92,7 @@ void set_config_print(char *var, bool val) {
     config_print_reg = val;
     config_print_platform = val;
     config_print_rvfi = val;
+    config_print_exception = val;
   } else if (strcmp("instr", var) == 0) {
     config_print_instr = val;
   } else if (strcmp("reg", var) == 0) {
@@ -101,8 +103,10 @@ void set_config_print(char *var, bool val) {
     config_print_rvfi = val;
   } else if (strcmp("platform", var) == 0) {
     config_print_platform = val;
+  } else if (strcmp("exception", var) == 0) {
+    config_print_exception = val;
   } else {
-    fprintf(stderr, "Unknown trace category: '%s' (should be instr|reg|mem|platform|all)\n", var);
+    fprintf(stderr, "Unknown trace category: '%s' (should be instr|reg|mem|exception|platform|all)\n", var);
     exit(1);
   }
 }
diff --git a/model/prelude.sail b/model/prelude.sail
index 6e6718b..29646e2 100644
--- a/model/prelude.sail
+++ b/model/prelude.sail
@@ -175,6 +175,7 @@ val print_platform = {ocaml: "Platform.print_platform", interpreter: "print_endl
 val get_config_print_instr = {ocaml: "Platform.get_config_print_instr", c:"get_config_print_instr"} : unit -> bool
 val get_config_print_reg = {ocaml: "Platform.get_config_print_reg", c:"get_config_print_reg"} : unit -> bool
 val get_config_print_mem = {ocaml: "Platform.get_config_print_mem", c:"get_config_print_mem"} : unit -> bool
+val get_config_print_exception = {ocaml: "Platform.get_config_print_exception", c:"get_config_print_exception"} : unit -> bool
 
 val get_config_print_platform = {ocaml: "Platform.get_config_print_platform", c:"get_config_print_platform"} : unit -> bool
 // defaults for other backends
@@ -182,6 +183,7 @@ function get_config_print_instr () = false
 function get_config_print_reg () = false
 function get_config_print_mem () = false
 function get_config_print_platform () = false
+function get_config_print_exception () = false
 
 val EXTS : forall 'n 'm, 'm >= 'n. (implicit('m), bits('n)) -> bits('m)
 val EXTZ : forall 'n 'm, 'm >= 'n. (implicit('m), bits('n)) -> bits('m)
diff --git a/model/riscv_step.sail b/model/riscv_step.sail
index 40c0c80..5ba0e72 100644
--- a/model/riscv_step.sail
+++ b/model/riscv_step.sail
@@ -77,8 +77,8 @@ function step(step_no : int) -> bool = {
   let (retired, stepped) : (Retired, bool) =
     match dispatchInterrupt(cur_privilege) {
       Some(intr, priv) => {
-        if   get_config_print_instr()
-        then print_bits("Handling interrupt: ", interruptType_to_bits(intr));
+        if get_config_print_instr() | get_config_print_exception()
+        then print("Handling interrupt PC=" ^ BitStr(PC) ^ " IRQ=" ^ BitStr(interruptType_to_bits(intr)));
         handle_interrupt(intr, priv);
         (RETIRE_FAIL, false)
       },
-- 
2.39.2

